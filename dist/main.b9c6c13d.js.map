{"version":3,"sources":["main.js"],"names":["PenguinModel","XMLHttpRequest","prototype","getPenguin","index","fn","oReq","onload","e","ajaxResponse","JSON","parse","currentTarget","responseText","penguin","count","length","open","send","PenguinView","element","onClickGetPenguin","render","viewModel","innerHTML","name","imageUrl","size","favoriteFood","previousIndex","nextIndex","querySelector","addEventListener","PenguinController","penguinView","penguinModel","initialize","bind","target","parseInt","dataset","penguinIndex","showPenguin","penguinModelData","penguinViewModel","targetElement","document","getElementById","controller"],"mappings":";AAAA,aAEA,IAAIA,EAAe,SAAsBC,GACvC,KAAKA,eAAiBA,GAGxBD,EAAaE,UAAUC,WAAa,SAAoBC,EAAOC,GAC7D,IAAIC,EAAO,IAAI,KAAKL,eAEpBK,EAAKC,OAAS,SAAgBC,GAC5B,IAAIC,EAAeC,KAAKC,MAAMH,EAAEI,cAAcC,cAC1CC,EAAUL,EAAaL,GAE3BU,EAAQV,MAAQA,EAChBU,EAAQC,MAAQN,EAAaO,OAE7BX,EAAGS,IAGLR,EAAKW,KAAK,MAAO,mDAAmD,GACpEX,EAAKY,QAGP,IAAIC,EAAc,SAAqBC,GACrC,KAAKA,QAAUA,EAEf,KAAKC,kBAAoB,MAG3BF,EAAYjB,UAAUoB,OAAS,SAAgBC,GAC7C,KAAKH,QAAQI,UAAY,OAASD,EAAUE,KAAO,wCACZF,EAAUG,SAC/C,UAAYH,EAAUE,KAAO,uBACRF,EAAUI,KAAO,gCACRJ,EAAUK,aAAe,sGAE7BL,EAAUM,cAAgB,yGAE1BN,EAAUO,UAAY,aAElD,KAAKD,cAAgBN,EAAUM,cAC/B,KAAKC,UAAYP,EAAUO,UAEL,KAAKV,QAAQW,cAAc,oBACjCC,iBAAiB,QAAS,KAAKX,mBAE7B,KAAKD,QAAQW,cAAc,gBACjCC,iBAAiB,QAAS,KAAKX,oBAG7C,IAAIY,EAAoB,SAA2BC,EAAaC,GAC9D,KAAKD,YAAcA,EACnB,KAAKC,aAAeA,GAGtBF,EAAkB/B,UAAUkC,WAAa,WACvC,KAAKF,YAAYb,kBAAoB,KAAKA,kBAAkBgB,KAAK,OAGnEJ,EAAkB/B,UAAUmB,kBAAoB,SAA2Bb,GACzE,IAAI8B,EAAS9B,EAAEI,cACXR,EAAQmC,SAASD,EAAOE,QAAQC,aAAc,IAElD,KAAKN,aAAahC,WAAWC,EAAO,KAAKsC,YAAYL,KAAK,QAG5DJ,EAAkB/B,UAAUwC,YAAc,SAAqBC,GAC7D,IAAIC,EAAmB,CACrBnB,KAAMkB,EAAiBlB,KACvBC,SAAUiB,EAAiBjB,SAC3BC,KAAMgB,EAAiBhB,KACvBC,aAAce,EAAiBf,cAGjCgB,EAAiBf,cAAgBc,EAAiBvC,MAAQ,EAC1DwC,EAAiBd,UAAYa,EAAiBvC,MAAQ,EAEvB,IAA3BuC,EAAiBvC,QACnBwC,EAAiBf,cAAgBc,EAAiB5B,MAAQ,GAGxD4B,EAAiBvC,QAAUuC,EAAiB5B,MAAQ,IACtD6B,EAAiBd,UAAY,GAE/B,KAAKI,YAAYZ,OAAOsB,IAG1B,IAAIT,EAAe,IAAInC,EAAaC,gBAEhC4C,EAAgBC,SAASC,eAAe,kBACxCb,EAAc,IAAIf,EAAY0B,GAE9BG,EAAa,IAAIf,EAAkBC,EAAaC,GAEpDa,EAAWZ,aAEXY,EAAW3B,kBAAkB,CAAET,cAAe,CAAE4B,QAAS,CAAEC,aAAc","file":"main.b9c6c13d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet PenguinModel = function PenguinModel(XMLHttpRequest) {\n  this.XMLHttpRequest = XMLHttpRequest;\n};\n\nPenguinModel.prototype.getPenguin = function getPenguin(index, fn) {\n  let oReq = new this.XMLHttpRequest();\n\n  oReq.onload = function onLoad(e) {\n    let ajaxResponse = JSON.parse(e.currentTarget.responseText);\n    let penguin = ajaxResponse[index];\n\n    penguin.index = index;\n    penguin.count = ajaxResponse.length;\n\n    fn(penguin);\n  };\n\n  oReq.open('GET', 'https://codepen.io/beautifulcoder/pen/vmOOLr.js', true);\n  oReq.send();\n};\n\nlet PenguinView = function PenguinView(element) {\n  this.element = element;\n\n  this.onClickGetPenguin = null;\n};\n\nPenguinView.prototype.render = function render(viewModel) {\n  this.element.innerHTML = '<h3>' + viewModel.name + '</h3>' +\n    '<img class=\"penguin-image\" src=\"' + viewModel.imageUrl +\n    '\" alt=\"' + viewModel.name + '\" />' +\n    '<p><b>Size:</b> ' + viewModel.size + '</p>' +\n    '<p><b>Favorite food:</b> ' + viewModel.favoriteFood + '</p>' +\n    '<a id=\"previousPenguin\" class=\"previous button\" href=\"javascript:void(0);\"' +\n    ' data-penguin-index=\"' + viewModel.previousIndex + '\">Previous</a> ' +\n    '<a id=\"nextPenguin\" class=\"next button\" href=\"javascript:void(0);\"' +\n    ' data-penguin-index=\"' + viewModel.nextIndex + '\">Next</a>';\n\n  this.previousIndex = viewModel.previousIndex;\n  this.nextIndex = viewModel.nextIndex;\n\n  let previousPenguin = this.element.querySelector('#previousPenguin');\n  previousPenguin.addEventListener('click', this.onClickGetPenguin);\n\n  let nextPenguin = this.element.querySelector('#nextPenguin');\n  nextPenguin.addEventListener('click', this.onClickGetPenguin);\n};\n\nlet PenguinController = function PenguinController(penguinView, penguinModel) {\n  this.penguinView = penguinView;\n  this.penguinModel = penguinModel;\n};\n\nPenguinController.prototype.initialize = function initialize() {\n  this.penguinView.onClickGetPenguin = this.onClickGetPenguin.bind(this);\n};\n\nPenguinController.prototype.onClickGetPenguin = function onClickGetPenguin(e) {\n  let target = e.currentTarget;\n  let index = parseInt(target.dataset.penguinIndex, 10);\n\n  this.penguinModel.getPenguin(index, this.showPenguin.bind(this));\n};\n\nPenguinController.prototype.showPenguin = function showPenguin(penguinModelData) {\n  let penguinViewModel = {\n    name: penguinModelData.name,\n    imageUrl: penguinModelData.imageUrl,\n    size: penguinModelData.size,\n    favoriteFood: penguinModelData.favoriteFood\n  };\n\n  penguinViewModel.previousIndex = penguinModelData.index - 1;\n  penguinViewModel.nextIndex = penguinModelData.index + 1;\n\n  if (penguinModelData.index === 0) {\n    penguinViewModel.previousIndex = penguinModelData.count - 1;\n  }\n\n  if (penguinModelData.index === penguinModelData.count - 1) {\n    penguinViewModel.nextIndex = 0;\n  }\n  this.penguinView.render(penguinViewModel);\n};\n\nlet penguinModel = new PenguinModel(XMLHttpRequest);\n\nlet targetElement = document.getElementById('listOfPenguins');\nlet penguinView = new PenguinView(targetElement);\n\nlet controller = new PenguinController(penguinView, penguinModel);\n\ncontroller.initialize();\n\ncontroller.onClickGetPenguin({ currentTarget: { dataset: { penguinIndex: 0 } } });\n"]}